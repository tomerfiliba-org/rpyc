# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: RPyC

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  python-unittest-all-versions:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12.0-alpha.1"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4

        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          echo "PYTHONPATH=${PYTHONPATH}:/home/runner/work/rpyc" >> $GITHUB_ENV
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Init ssh settings
        run: |
          mkdir -pv ~/.ssh
          chmod 700 ~/.ssh
          echo NoHostAuthenticationForLocalhost yes >> ~/.ssh/config
          echo StrictHostKeyChecking no >> ~/.ssh/config
          ssh-keygen -q -f ~/.ssh/id_rsa -N ''
          cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
          uname -a
      - name: Test with unittest
        run: |
          python -m unittest discover -s ./rpyc ./tests
